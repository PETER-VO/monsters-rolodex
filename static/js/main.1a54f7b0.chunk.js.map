{"version":3,"sources":["components/card/card.js","components/card-list/card-list.js","components/search-box/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filterMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAGaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,WCFdC,G,MAAW,SAAAP,GACpB,OAAO,qBAAKC,UAAU,YAAf,SACHD,EAAMQ,SAASC,KAAI,SAAAL,GAAO,OACtB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCJlBK,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,8BACI,uBAAOX,UAAU,SAASY,KAAK,SAASF,YAAaA,EAAaG,SAAUF,QC+BrEG,E,kDA7Bb,aAAc,IAAD,8BACX,gBAEKC,MAAQ,CACXC,YAAY,GACZT,SAAS,IALA,E,qDASb,WAAoB,IAAD,OACjBU,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACf,SAASc,S,oBAGzC,WAAS,IAAD,SAC0BE,KAAKR,MAA9BC,EADD,EACCA,YACDQ,EAFA,EACcjB,SACYkB,QAAO,SAAAtB,GAAO,OAAIA,EAAQE,KAAKqB,cAAcC,SAASX,EAAYU,kBAClG,OACE,sBAAK1B,UAAU,MAAf,UACI,kDACA,cAAC,EAAD,CAAWU,YAAY,iBAAiBC,aAAc,SAACiB,GAAO,EAAKN,SAAS,CAACN,YAAcY,EAAEC,OAAOC,WACpG,cAAC,EAAD,CAAUvB,SAAUiB,W,GAxBZO,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1a54f7b0.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.css'\r\n\r\nexport const Card = props => (\r\n    <div className=\"card-container\">\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n        <h1>{props.monster.name}</h1>\r\n    </div>\r\n)","import React from 'react';\r\nimport { Card } from '../card/card';\r\nimport './card-list.css';\r\n\r\nexport const CardList = props => {\r\n    return <div className=\"card-list\">{\r\n        props.monsters.map(monster => (\r\n            <Card key={monster.id} monster={monster}/>\r\n          ))\r\n      }</div>\r\n}","import React from 'react'\r\nimport './search-box.css'\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <div>\r\n        <input className=\"search\" type=\"search\" placeholder={placeholder} onChange={handleChange}/> \r\n    </div>\r\n)","import './App.css';\nimport {React, Component} from 'react';\nimport {CardList} from './components/card-list/card-list'\nimport { SearchBox } from './components/search-box/search-box';\n\nclass App extends Component{\n\n  constructor(){\n    super();\n\n    this.state = {\n      searchField:\"\",\n      monsters:[]\n    };\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters:users}));\n  }\n\n  render(){\n    const {searchField, monsters} = this.state;\n    const filterMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return(\n      <div className=\"App\">\n          <h1>Monsters Rolodex</h1>\n          <SearchBox placeholder=\"search monster\" handleChange={(e) => {this.setState({searchField : e.target.value})}}/>\n          <CardList monsters={filterMonsters} />\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}